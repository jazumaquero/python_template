[tool.poetry]
name = "python_template"
version = "0.5.0"
description = "Just another opinionated cookiecutter template to stop writing Python boilerplate."
authors = ["Jos√© Antonio Zumaquero Tores <jazumaquer@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.dev-dependencies]
pytest = "^6.2.3"
cookiecutter = "^1.7"
ruff = "0.11.7"

[tool.ruff]
# Opinionated line-length (80 or 88 chars for each line is fine for vim,...but not too short for me)
line-length = 120
indent-width = 4
exclude = [".target", ".tox", ".venv", "base", "cli", "docker", "library"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "B", "Q", "N"]
ignore = ["E203", "E265", "E401", "D104"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
# Like Black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
